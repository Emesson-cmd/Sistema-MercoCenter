/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viw;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import dao.Conexao;
import controle.Funcionario_controle;
import controle.Usuario_controle;
import dao.Usuario_Dao;
import model.Funcionario_modelo;
import model.Usuario_Modelo;

/**
 *
 * @author emesson
 */
public class TelaCriarLogin extends javax.swing.JInternalFrame {

    ArrayList<Usuario_Modelo> usuarios = new ArrayList();
    ArrayList<Funcionario_modelo> funcionarios = new ArrayList();

    Connection conexao = null;
    Conexao con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form TelaCriarLogin
     */
    public TelaCriarLogin() {
        initComponents();

        // torna os campos referentes à funcionários não editáveis
        txtFunNome.setEditable(false);
        txtFunCpf.setEditable(false);
        selFunCargo.setEnabled(false);
        selFunSituacao.setEnabled(false);

        iniciarTabela();
        limparCampos();
    }

    // Inicia a tabela de usuários
    private void iniciarTabela() {
        tabelaUsuarios.setDefaultEditor(Object.class, null);
        DefaultTableModel dtmUsuario = (DefaultTableModel) tabelaUsuarios.getModel();

        // Retorna um arrayList de usuários
        this.usuarios = new Usuario_controle().buscarUsuarios();

        // alimentando tabela
        for (int i = 0; i < this.usuarios.size(); i++) {

            Object[] dadosUsuarios = {
                usuarios.get(i).getCod_usuario(),
                usuarios.get(i).getFuncionario_cod_funcionario(),
                usuarios.get(i).getNome(),
                usuarios.get(i).getAtivo(),
                usuarios.get(i).getPermissao()
            };

            dtmUsuario.addRow(dadosUsuarios);
        }
    }

    // limpa os campos
    private void limparCampos() {

        // limpa os campos de usuário
        txtUsuCod.setText(null);
        txtUsuNome.setText(null);
        txtUsuSenha.setText(null);
        selUsuPermissao.setSelectedItem(null);
        selUsuAtivo.setSelectedIndex(0);

        // limpa os campos de funcionário
        txtFunCod.setText(null);
        txtFunNome.setText(null);
        txtFunCpf.setText(null);
        selFunCargo.setSelectedItem(null);
        selFunSituacao.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUsuarios = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFunCod = new javax.swing.JTextField();
        txtFunNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtFunCpf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        selFunCargo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        selFunSituacao = new javax.swing.JComboBox<>();
        btnFunConsultar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        btnUsuVer = new javax.swing.JButton();
        btnUsuExcluir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtUsuCod = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnUsuAdicionar = new javax.swing.JButton();
        txtUsuSenha = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        txtUsuNome = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnUsuAtualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        selUsuPermissao = new javax.swing.JComboBox<>();
        selUsuAtivo = new javax.swing.JComboBox<>();
        btnSenhaMostrarOcultar = new javax.swing.JButton();
        btnUsuInformation = new javax.swing.JButton();

        setTitle("Criar Login");
        setPreferredSize(new java.awt.Dimension(650, 415));

        tabelaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Usu.", "Cod Func.", "Nome", "Ativo", "Permissão"
            }
        ));
        tabelaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaUsuarios);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Cod. Func.");

        txtFunCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFunCodActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome Func.");

        jLabel3.setText("CPF Func.");

        jLabel4.setText("Cargo");

        selFunCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "adm", "gerente", "almoxarife", "caixa", "recurso humano" }));

        jLabel5.setText("Situação");

        selFunSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "default", "ativo", "inativo", " " }));

        btnFunConsultar.setText("Consultar");
        btnFunConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFunConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFunNome)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFunCod))
                    .addComponent(txtFunCpf)
                    .addComponent(selFunCargo, 0, 152, Short.MAX_VALUE)
                    .addComponent(selFunSituacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFunConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFunCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFunNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFunCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selFunCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selFunSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFunConsultar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnUsuVer.setText("Ver");
        btnUsuVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuVerActionPerformed(evt);
            }
        });

        btnUsuExcluir.setText("Excluir");
        btnUsuExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUsuVer, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUsuExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUsuVer)
                    .addComponent(btnUsuExcluir)))
        );

        txtUsuCod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUsuCodMouseClicked(evt);
            }
        });

        jLabel8.setText("Senha Usu.");

        btnUsuAdicionar.setText("Adicionar");
        btnUsuAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuAdicionarActionPerformed(evt);
            }
        });

        jLabel10.setText("Permissão");

        jLabel9.setText("Ativo");

        btnUsuAtualizar.setText("Atualizar");
        btnUsuAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuAtualizarActionPerformed(evt);
            }
        });

        jLabel7.setText("Nome Usu.");

        jLabel6.setText("Cod. Usu");

        selUsuPermissao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "default", "adm", "caixa", "almoxarife" }));

        selUsuAtivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "default", "ativo", "inativo" }));

        btnSenhaMostrarOcultar.setText("Mostrar");
        btnSenhaMostrarOcultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSenhaMostrarOcultarActionPerformed(evt);
            }
        });

        btnUsuInformation.setText("?");
        btnUsuInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuInformationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsuNome)
                    .addComponent(selUsuPermissao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selUsuAtivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUsuAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUsuAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUsuCod, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUsuInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtUsuSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSenhaMostrarOcultar)))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnUsuInformation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsuNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSenhaMostrarOcultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selUsuPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selUsuAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUsuAdicionar)
                    .addComponent(btnUsuAtualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14)))
                .addGap(12, 12, 12)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFunCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFunCodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFunCodActionPerformed

    private void tabelaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaUsuariosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaUsuariosMouseClicked

    // Pega as linha selecionada na tabela de usuários e insere as informações nos campos de texto
    private void btnUsuVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuVerActionPerformed
        // TODO add your handling code here:
        limparCampos();

        int colunaSelecionada = tabelaUsuarios.getSelectedRow();

        // preenche campos referente ao usuários
        txtUsuCod.setText(String.valueOf(usuarios.get(colunaSelecionada).getCod_usuario()));
        txtUsuNome.setText(String.valueOf(usuarios.get(colunaSelecionada).getNome()));
        txtUsuSenha.setText(String.valueOf(usuarios.get(colunaSelecionada).getSenha()));
        selUsuPermissao.setSelectedItem(String.valueOf(usuarios.get(colunaSelecionada).getPermissao()));
        selUsuAtivo.setSelectedIndex(usuarios.get(colunaSelecionada).getAtivo());

        // Verifica se existe um funcionário relacionado à um usuário. Caso exista os campos
        // referentes á funcionário serão preenchidos
        int funcionario_cod_funcionario = usuarios.get(colunaSelecionada).getFuncionario_cod_funcionario();
        this.funcionarios = new Funcionario_controle().buscarFuncionarios();
        for (int i = 0; i < funcionarios.size(); i++) {
            if (funcionarios.get(i).getCod() == funcionario_cod_funcionario) {
                txtFunCod.setText(String.valueOf(funcionario_cod_funcionario));
                txtFunNome.setText(funcionarios.get(i).getNome());
                txtFunCpf.setText(funcionarios.get(i).getCpf());
                selFunCargo.setSelectedItem(funcionarios.get(i).getCargo());
                selFunSituacao.setSelectedItem(funcionarios.get(i).getSituacao());
            }
        }
    }//GEN-LAST:event_btnUsuVerActionPerformed

    // Oculta e mostra a senha do usuário
    private void btnSenhaMostrarOcultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSenhaMostrarOcultarActionPerformed
        if (btnSenhaMostrarOcultar.getText().equalsIgnoreCase("Mostrar")) {
            txtUsuSenha.setEchoChar((char) 0);
            btnSenhaMostrarOcultar.setText("Ocultar");
        } else if (btnSenhaMostrarOcultar.getText().equalsIgnoreCase("Ocultar")) {
            txtUsuSenha.setEchoChar('*');
            btnSenhaMostrarOcultar.setText("Mostrar");
        }
    }//GEN-LAST:event_btnSenhaMostrarOcultarActionPerformed

    // Após informar um código de funcionário válido, consulta as informações do funcionário
    // e do usuário (se este houver)
    private void btnFunConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFunConsultarActionPerformed
        String codFunInserido = txtFunCod.getText();
        boolean funNaoEncontrado = true;

        // Verifica se o campo de funcionário é um código válido. Caso seja, é
        // feito uma consulta para saber se há um funcionário correspondete
        // no banco de dados
        if (validarCampoNumerico(txtFunCod) == true) {
            int codFun = Integer.parseInt(codFunInserido);
            this.funcionarios = new Funcionario_controle().buscarFuncionarios();
            for (int i = 0; i < funcionarios.size(); i++) {
                if (funcionarios.get(i).getCod() == codFun) {
                    txtFunCod.setText(codFunInserido);
                    txtFunNome.setText(funcionarios.get(i).getNome());
                    txtFunCpf.setText(funcionarios.get(i).getCpf());
                    selFunCargo.setSelectedItem(funcionarios.get(i).getCargo());
                    selFunSituacao.setSelectedItem(funcionarios.get(i).getSituacao());

                    // Caso haja um funcionário no banco de dados com o código fornecido
                    // pelo cliente, é feito uma consulta para verificar se há um
                    // usuário corresponde para o funcionário em questão.
                    // Caso positivo, as informações do usuário são preenchidas.
                    for (int j = 0; j < usuarios.size(); j++) {
                        if (funcionarios.get(i).getCod() == usuarios.get(j).getFuncionario_cod_funcionario()) {
                            System.out.println("O cod. fun " + funcionarios.get(i).getCod());
                            txtUsuCod.setText(String.valueOf(usuarios.get(j).getCod_usuario()));
                            txtUsuNome.setText((usuarios.get(j).getNome()));
                            txtUsuSenha.setText((usuarios.get(j).getSenha()));
                            selUsuPermissao.setSelectedItem((usuarios.get(j).getPermissao()));
                            selUsuAtivo.setSelectedIndex(usuarios.get(j).getAtivo());
                        }
                    }
                    funNaoEncontrado = false;
                }
            }

            // Se não encontrar um funcionário no sistema, uma mensagem é apresentada para
            // o utilizador do sistema
            if (funNaoEncontrado == true) {
                JOptionPane.showMessageDialog(null, "Funcionário não encontrado por Código. Tente novamente.");
            }

        }
    }//GEN-LAST:event_btnFunConsultarActionPerformed

    // Mostra informação específica
    private void btnUsuInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuInformationActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Esse código  será usado para fazer login no sistema");
    }//GEN-LAST:event_btnUsuInformationActionPerformed

    // Fornece um código aleatório para o utilizador ao clicar no campo código de usuário
    private void txtUsuCodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUsuCodMouseClicked
        // TODO add your handling code here:
        boolean codRepetido = false;
        Random random = new Random();
        int codigoAleatorio = random.nextInt(10000);

        // Verifica se o código está ocupado por outro usuário
        for (int i = 0; i < usuarios.size(); i++) {
            if (usuarios.get(i).getCod_usuario() == codigoAleatorio) {
                codRepetido = true;
            }
        }

        // Caso o código esteja livre, será apresentado para o usuário
        if (codRepetido == false) {
            txtUsuCod.setText(String.valueOf(codigoAleatorio));
        }
    }//GEN-LAST:event_txtUsuCodMouseClicked

    // Adiciona novo usuário
    private void btnUsuAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuAdicionarActionPerformed
        if (txtFunCod.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Para adicionar um usuário o código do funcionário não pode estar vazio!");
        } else if (funcionarioJaTemLogin() == true) {
            JOptionPane.showMessageDialog(null, "Funcionário já possui usuário no sistema!");
        } else {
            if (validarCampos() == true
                    && validarCampoNumerico(txtUsuCod) == true
                    && validarCampoNumerico(txtFunCod) == true) {

                String nomeFun = txtFunNome.getText();
                int decisao = JOptionPane.showConfirmDialog(null, "Deseja mesmo criar um novo usuário para o funcionário: " + nomeFun + "?");

                if (decisao == 0) {
                    Usuario_Modelo usuario_modelo = new Usuario_Modelo();

                    usuario_modelo.setCod_usuario(Integer.parseInt(txtUsuCod.getText()));
                    usuario_modelo.setSenha(txtUsuSenha.getText());
                    usuario_modelo.setPermissao(String.valueOf(selUsuPermissao.getSelectedItem()));
                    usuario_modelo.setFuncionario_cod_funcionario(Integer.parseInt(txtFunCod.getText()));
                    usuario_modelo.setNome(txtUsuNome.getText());
                    usuario_modelo.setAtivo(selUsuAtivo.getSelectedIndex());

                    Usuario_controle usuario_controle = new Usuario_controle();
                    usuario_controle.adicionarUsuario(usuario_modelo);
                }
            }
        }

    }//GEN-LAST:event_btnUsuAdicionarActionPerformed

    // Atualiza dados de usuário já existente
    private void btnUsuAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuAtualizarActionPerformed
        // TODO add your handling code here:
        if (validarCampos() == false) {

        } else if (validarCampoNumerico(txtFunCod) == false) {

        } else if (validarCampoNumerico(txtUsuCod) == false) {

        } else {
            System.out.println("Podemos prosseguir com a atualização!");

            String nomeFun = txtFunNome.getText();
            int decisao = JOptionPane.showConfirmDialog(null, "Tem certeza que quer atualizar os dados do funcionário: " + nomeFun + "?");

            if (decisao == 0) {
                Usuario_Modelo usuario_modelo = new Usuario_Modelo();

                usuario_modelo.setCod_usuario(Integer.parseInt(txtUsuCod.getText()));
                usuario_modelo.setSenha(txtUsuSenha.getText());
                usuario_modelo.setPermissao(String.valueOf(selUsuPermissao.getSelectedItem()));
                usuario_modelo.setFuncionario_cod_funcionario(Integer.parseInt(txtFunCod.getText()));
                usuario_modelo.setNome(txtUsuNome.getText());
                usuario_modelo.setAtivo(selUsuAtivo.getSelectedIndex());

                Usuario_controle usuario_controle = new Usuario_controle();
                usuario_controle.atualizarUsuario(usuario_modelo);
            }
        }
    }//GEN-LAST:event_btnUsuAtualizarActionPerformed

    // Excluir um usuário através do cod_usuario
    private void btnUsuExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuExcluirActionPerformed
        int colunaSelecionada = tabelaUsuarios.getSelectedRow();
        String usuNome = usuarios.get(colunaSelecionada).getNome();
        int usuCod = usuarios.get(colunaSelecionada).getCod_usuario();
        int decisao = JOptionPane.showConfirmDialog(null, "Deseja mesmo excluir o usuário " + usuNome + "?"
                + "\nAlerta: essa ação não poderá ser desfeita!");
        
        if (decisao == 0){
            Usuario_controle usuario_controle = new Usuario_controle();
            usuario_controle.deletarUsuario(usuCod);
        }
    }//GEN-LAST:event_btnUsuExcluirActionPerformed

    // Verifica se um funcionário já tem login (usuário)
    public boolean funcionarioJaTemLogin() {
        
        for (int j = 0; j < usuarios.size(); j++) {
            if (Integer.parseInt(txtFunCod.getText()) == usuarios.get(j).getFuncionario_cod_funcionario()) {
                System.out.println("Funcionário já tem login");
                return true;
            }
        }
        return false;
        
    }

    // Esse método valida os campos de texto que podem somente receber número
    private boolean validarCampoNumerico(JTextField campoTexto) {
        String codInserido = campoTexto.getText();

        try {
            int codigo = Integer.parseInt(codInserido);
            if (codigo < 0) {
                JOptionPane.showMessageDialog(null, "Valor incorreto! Tente novamente.");
                return false;
            } else {
                return true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Informe um valor válido! Temte novamente.");
            System.out.println("Erro: " + e);
            return false;
        }
    }

    // Esse método verifica se todos os campos referentes à usuário estão preenchidos
    private boolean validarCampos() {
        if (txtUsuCod.getText().equalsIgnoreCase("")
                || txtUsuNome.getText().equalsIgnoreCase("")
                || txtUsuSenha.getText().equalsIgnoreCase("")
                || selUsuPermissao.getSelectedIndex() == 0
                || selUsuAtivo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos necessários!");
            return false;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFunConsultar;
    private javax.swing.JButton btnSenhaMostrarOcultar;
    private javax.swing.JButton btnUsuAdicionar;
    private javax.swing.JButton btnUsuAtualizar;
    private javax.swing.JButton btnUsuExcluir;
    private javax.swing.JButton btnUsuInformation;
    private javax.swing.JButton btnUsuVer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> selFunCargo;
    private javax.swing.JComboBox<String> selFunSituacao;
    private javax.swing.JComboBox<String> selUsuAtivo;
    private javax.swing.JComboBox<String> selUsuPermissao;
    private javax.swing.JTable tabelaUsuarios;
    private javax.swing.JTextField txtFunCod;
    private javax.swing.JTextField txtFunCpf;
    private javax.swing.JTextField txtFunNome;
    private javax.swing.JTextField txtUsuCod;
    private javax.swing.JTextField txtUsuNome;
    private javax.swing.JPasswordField txtUsuSenha;
    // End of variables declaration//GEN-END:variables
}
